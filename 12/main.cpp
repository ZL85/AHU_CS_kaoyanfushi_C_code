//C语言
//给定一个函数：
//F(0) = 0;
//F(1) = 1;
//F(n) = F(n - 1) + F(n - 2), n > 1;
//程序输入一个整数n(0 < n < 100000)，输出F(n)的值，结果对854562545取余。

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
int main()
{
    int n;
    printf("请输入整数n(0<n<100000)：\n");
    scanf("%d", &n);
    long long f0 = 0, f1 = 1, fn = NULL;
    for (int i = 2; i <= n; i++)
    {
        fn = f0 + f1;
        f0 = f1;
        f1 = fn;
    }
    printf("F(n)%%854562545=%lld\n",fn % 854562545);
    return 0;
}
//首先，我们用变量 n 接收输入的整数。由于 F(n) 可能非常大，因此我们需要使用 long long 类型来存储计算结果。
//接下来，我们使用三个变量 f0、f1 和 fn 分别表示 F(n - 2)、F(n - 1) 和 F(n)。
//由于题目中规定了 F(0) 和 F(1) 的值，因此我们将 f0 和 f1 的初值分别赋为 0 和 1。
//然后，我们使用一个循环从 2 开始迭代计算，依据递推公式 F(n) = F(n - 1) + F(n - 2)，
//我们每次更新 fn 为 f0 + f1，然后将 f1 赋值给 f0，将 fn 赋值给 f1。这样，当循环结束时，fn 的值就是 F(n)。
//最后，我们将 fn 对 854562545 取模，并将结果输出。


//C语言中的long long类型，它是一个整数类型，可以存储更大的整数值。它通常使用于需要处理较大整数的情况，
//例如在计算机科学和工程中，特别是在涉及计算机游戏、密码学、数据加密、图像处理等领域。
//在C语言中，long long类型的大小为8个字节，即64位。在格式说明符中，使用"%lld"来读取和打印long long类型的值。